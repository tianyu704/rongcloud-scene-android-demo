/*
 * Copyright © 2021 RongCloud. All rights reserved.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id("dagger.hilt.android.plugin")
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "1.5.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        renderscriptTargetApi 14
        renderscriptSupportModeEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                // 此参数用于编译期生成相关代码的标识，请勿删除
                arguments += [isAppModule: 'true']
            }
        }
        renderscriptSupportModeEnabled true
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            keyAlias "debugkey"
            keyPassword "123456"
            storeFile file("./debugkey.key")
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    androidExtensions {
        experimental = true
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output -> outputFileName = new File(variant.name, "RTC_RC_" + releaseTime() + ".apk")
            }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    flavorDimensions("environment")
    //线上地址：10.120.6.162    UCBJ2-RTC-Web-Prod-App-6-162
    //测试地址：10.40.0.97         UCBJ2-RTC-Web-Test-App-0-97
    productFlavors {
        developerEnvironment {
            dimension 'environment'
            applicationId "cn.rongcloud.voiceroomdemo.dev" // 配置不同的包名，确保切换环境时不会因为缓存导致出现问题
            buildConfigField("String", "APP_KEY", "\"pvxdm17jpw7ar\"")
            buildConfigField("String", "UM_APP_KEY", "\"60c062bf8d6cd512500c78ed\"")
            buildConfigField("String","BASE_SERVER_ADDRES","\"http://172.29.208.9:8081/\"")
        }
        releaseEnvironment {
            dimension 'environment'
            applicationId "cn.rongcloud.voiceroomdemo"
            buildConfigField("String", "APP_KEY", "\"uwd1c0sxukso1\"")
            buildConfigField("String", "UM_APP_KEY", "\"60c062bf8d6cd512500c78ed\"")
            buildConfigField("String", "BASE_SERVER_ADDRES", "\"http://120.92.102.127:8081/\"")
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(path: ':annotation')
    implementation project(path: ':processor')
    implementation project(path: ':avcall')
    implementation project(path: ':common')
    implementation project(path: ':combusis')
    implementation project(path: ':voiceroom')
    implementation project(path: ':radioroom')

    api "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation 'com.android.support:multidex:1.0.3'
}